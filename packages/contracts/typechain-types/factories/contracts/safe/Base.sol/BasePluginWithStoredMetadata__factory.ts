/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  BasePluginWithStoredMetadata,
  BasePluginWithStoredMetadataInterface,
} from "../../../../contracts/safe/Base.sol/BasePluginWithStoredMetadata";

const _abi = [
  {
    inputs: [],
    name: "metadataHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataProvider",
    outputs: [
      {
        internalType: "uint256",
        name: "providerType",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "location",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requiresPermissions",
    outputs: [
      {
        internalType: "uint8",
        name: "permissions",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requiresRootAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_metadataHash",
        type: "bytes32",
      },
    ],
    name: "retrieveMetadata",
    outputs: [
      {
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class BasePluginWithStoredMetadata__factory {
  static readonly abi = _abi;
  static createInterface(): BasePluginWithStoredMetadataInterface {
    return new Interface(_abi) as BasePluginWithStoredMetadataInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BasePluginWithStoredMetadata {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BasePluginWithStoredMetadata;
  }
}
