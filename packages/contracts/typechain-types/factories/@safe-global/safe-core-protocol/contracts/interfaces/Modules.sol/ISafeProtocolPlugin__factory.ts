/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISafeProtocolPlugin,
  ISafeProtocolPluginInterface,
} from "../../../../../../@safe-global/safe-core-protocol/contracts/interfaces/Modules.sol/ISafeProtocolPlugin";

const _abi = [
  {
    inputs: [],
    name: "metadataProvider",
    outputs: [
      {
        internalType: "uint256",
        name: "providerType",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "location",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requiresPermissions",
    outputs: [
      {
        internalType: "uint8",
        name: "permissions",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ISafeProtocolPlugin__factory {
  static readonly abi = _abi;
  static createInterface(): ISafeProtocolPluginInterface {
    return new Interface(_abi) as ISafeProtocolPluginInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISafeProtocolPlugin {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ISafeProtocolPlugin;
  }
}
