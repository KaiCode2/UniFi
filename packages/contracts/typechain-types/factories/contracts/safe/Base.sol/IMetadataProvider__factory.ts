/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMetadataProvider,
  IMetadataProviderInterface,
} from "../../../../contracts/safe/Base.sol/IMetadataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "metadataHash",
        type: "bytes32",
      },
    ],
    name: "retrieveMetadata",
    outputs: [
      {
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IMetadataProvider__factory {
  static readonly abi = _abi;
  static createInterface(): IMetadataProviderInterface {
    return new Interface(_abi) as IMetadataProviderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IMetadataProvider {
    return new Contract(address, _abi, runner) as unknown as IMetadataProvider;
  }
}
