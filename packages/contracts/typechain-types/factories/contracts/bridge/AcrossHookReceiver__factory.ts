/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  AcrossHookReceiver,
  AcrossHookReceiverInterface,
} from "../../../contracts/bridge/AcrossHookReceiver";

const _abi = [
  {
    inputs: [],
    name: "InvalidBridge",
    type: "error",
  },
  {
    inputs: [],
    name: "ACROSS_BRIDGE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenSent",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "handleAcrossMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenSent",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "handleV3AcrossMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class AcrossHookReceiver__factory {
  static readonly abi = _abi;
  static createInterface(): AcrossHookReceiverInterface {
    return new Interface(_abi) as AcrossHookReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AcrossHookReceiver {
    return new Contract(address, _abi, runner) as unknown as AcrossHookReceiver;
  }
}
