/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFallbackRegister,
  IFallbackRegisterInterface,
} from "../../../contracts/interfaces/IFallbackRegister";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "safe",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getFallback",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint96",
            name: "tokenAddressIndex",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "amountIndex",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "vaultAddressIndex",
            type: "uint96",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TokenFallback.FallbackData",
        name: "fallbackData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeTokenFallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint96",
            name: "tokenAddressIndex",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "amountIndex",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "vaultAddressIndex",
            type: "uint96",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TokenFallback.FallbackData",
        name: "fallbackData",
        type: "tuple",
      },
    ],
    name: "setTokenFallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IFallbackRegister__factory {
  static readonly abi = _abi;
  static createInterface(): IFallbackRegisterInterface {
    return new Interface(_abi) as IFallbackRegisterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IFallbackRegister {
    return new Contract(address, _abi, runner) as unknown as IFallbackRegister;
  }
}
