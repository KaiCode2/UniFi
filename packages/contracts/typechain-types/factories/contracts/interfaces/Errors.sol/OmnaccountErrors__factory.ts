/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  OmnaccountErrors,
  OmnaccountErrorsInterface,
} from "../../../../contracts/interfaces/Errors.sol/OmnaccountErrors";

const _abi = [
  {
    inputs: [],
    name: "InvalidBridge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntryPoint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "safe",
        type: "address",
      },
    ],
    name: "ModuleNotEnabled",
    type: "error",
  },
] as const;

export class OmnaccountErrors__factory {
  static readonly abi = _abi;
  static createInterface(): OmnaccountErrorsInterface {
    return new Interface(_abi) as OmnaccountErrorsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OmnaccountErrors {
    return new Contract(address, _abi, runner) as unknown as OmnaccountErrors;
  }
}
